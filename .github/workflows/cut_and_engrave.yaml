name: Cut and Engrave Workflow

on:
  workflow_dispatch:
    inputs:
      material:
        description: 'Material to process (e.g., steel)'
        required: true
        default: 'steel'
      thickness:
        description: 'Thickness of the material (mm)'
        required: true
        default: '5'
      design:
        description: 'Design file path (e.g., logo.png)'
        required: true
        default: 'logo.png'
      output:
        description: 'Output file name'
        required: true
        default: 'finished_product'

jobs:
  process-laser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Install Ollama
        run: |
          curl -fsSL https://ollama.ai/install.sh | sh
          ollama serve &

      - name: Pull models
        run: |
          ollama pull wizardlm:7b
          ollama pull deepseek-coder-v2
          ollama pull llama3.2:8x3b
          ollama pull dolphin:24b

      - name: Plan strategy with wizardlm-7b
        run: |
          ollama run wizardlm:7b "Plan a laser cutting and engraving strategy for material: ${{ github.event.inputs.material }}, thickness: ${{ github.event.inputs.thickness }} mm, design: ${{ github.event.inputs.design }}. Output parameters in JSON format." > strategy.json
        env:
          OUTPUT_FILE: strategy.json

      - name: Generate G-code with deepseek-coder-v2
        run: |
          ollama run deepseek-coder-v2 "Generate G-code for laser cutting and engraving based on strategy in strategy.json. Save output to gcode.txt." > gcode.txt
        env:
          INPUT_FILE: strategy.json
          OUTPUT_FILE: gcode.txt

      - name: Coordinate workflow with llama-3.2-8x3b
        run: |
          ollama run llama3.2:8x3b "Coordinate a multi-agent workflow: use G-code from gcode.txt to control a laser machine. Simulate the process and output logs to process.log." > process.log
        env:
          INPUT_FILE: gcode.txt
          OUTPUT_FILE: process.log

      - name: Analyze and report with dolphin-24b
        run: |
          ollama run dolphin:24b "Analyze the process log in process.log and write a detailed report. Save the report to report.md." > report.md
        env:
          INPUT_FILE: process.log
          OUTPUT_FILE: report.md

      - name: Upload results
        uses: actions/upload-artifact@v4 # <<<--- บรรทัดนี้
        with:
          name: laser-output-${{ github.run_id }}
          path: |
            strategy.json
            gcode.txt
            process.log
            report.md
            ${{ github.event.inputs.output }}
